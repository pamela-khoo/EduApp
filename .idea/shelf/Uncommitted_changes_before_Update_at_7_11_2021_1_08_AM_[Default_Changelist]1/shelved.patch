Index: app/src/main/java/com/example/eduapp/ProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eduapp;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.navigation.Navigation;\r\n\r\nimport com.example.eduapp.MainActivity;\r\nimport com.example.eduapp.MainViewModel;\r\nimport com.example.eduapp.R;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.squareup.picasso.Picasso;\r\n\r\npublic class ProfileFragment extends BaseFragment {\r\n\r\n\r\n    TextView text_profile, text_dob;\r\n    Button logout_btn;\r\n    ImageView profile_image;\r\n    ImageButton edit_btn;\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_profile, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        logout_btn= view.findViewById(R.id.logout_btn);\r\n        text_profile=view.findViewById(R.id.text_profile);\r\n        profile_image = view.findViewById(R.id.profile_image);\r\n        text_dob = view.findViewById(R.id.text_dob);\r\n        edit_btn = view.findViewById(R.id.edit_button);\r\n\r\n        text_profile.setText(mainViewModel.getTest());\r\n        edit_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Navigation.findNavController(view).navigate(R.id.action_navigation_profile_to_editProfileFragment);\r\n            }\r\n        });\r\n        logout_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                logoutUser();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n\r\n\r\n       // FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        String currentId = user.getUid();\r\n\r\n\r\n        DocumentReference documentReference;\r\n        FirebaseFirestore firestore = FirebaseFirestore.getInstance();\r\n\r\n\r\n        documentReference = firestore.collection(\"User\").document(currentId);\r\n\r\n        documentReference.get()\r\n                .addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                        if (task.getResult().exists()){\r\n                            String nameResult = task.getResult().getString(\"name\");\r\n                            String urlResult = task.getResult().getString(\"url\");\r\n                            String dobResult = task.getResult().getString((\"dob\"));\r\n\r\n                            Picasso.get().load(urlResult).into(profile_image);\r\n                            text_profile.setText(nameResult);\r\n                            text_dob.setText((dobResult));\r\n\r\n\r\n                        }else{\r\n                            Toast.makeText(getContext(), \"Error\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n\r\n\r\n\r\n    }\r\n\r\n    private void logoutUser() {\r\n//        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(getActivity());\r\n//        alertDialogBuilder.setTitle(\"Exit Application?\");\r\n//        alertDialogBuilder\r\n//                .setMessage(\"Confirm Signing Out?\")\r\n//                .setCancelable(false)\r\n//                .setPositiveButton(\"Yes\",\r\n//                        new DialogInterface.OnClickListener() {\r\n//                            public void onClick(DialogInterface dialog, int id) {\r\n//                                FirebaseAuth.getInstance().signOut();\r\n//                                android.os.Process.killProcess(android.os.Process.myPid());\r\n//                                System.exit(1);\r\n//\r\n//                            }\r\n//                        })\r\n//\r\n//                .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n//                    public void onClick(DialogInterface dialog, int id) {\r\n//                        dialog.cancel();\r\n//                    }\r\n//                });\r\n//\r\n//        AlertDialog alertDialog = alertDialogBuilder.create();\r\n//        alertDialog.show();\r\n//\r\n        FirebaseAuth.getInstance().signOut();\r\n        Navigation.findNavController(getView()).navigate(R.id.action_navigation_profile_to_welcomeActivity);\r\n        ((MainActivity)requireActivity()).setBottomNavVisibility(false);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eduapp/ProfileFragment.java b/app/src/main/java/com/example/eduapp/ProfileFragment.java
--- a/app/src/main/java/com/example/eduapp/ProfileFragment.java	
+++ b/app/src/main/java/com/example/eduapp/ProfileFragment.java	
@@ -3,6 +3,7 @@
 import android.app.AlertDialog;
 import android.content.DialogInterface;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -24,6 +25,8 @@
 import com.example.eduapp.MainViewModel;
 import com.example.eduapp.R;
 import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
@@ -32,6 +35,11 @@
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.squareup.picasso.Picasso;
 
+import java.text.DateFormat;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.*;
+
 public class ProfileFragment extends BaseFragment {
 
 
@@ -143,6 +151,111 @@
     }
 
 
+    private void updateStreak(){
+        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
+        String currentUserId = user.getUid();
+        FirebaseFirestore db = FirebaseFirestore.getInstance();
+
+        final DocumentReference doc = db.collection("User").document(currentUserId);
+
+
+        doc.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
+            @Override
+            public void onComplete(@NonNull Task<DocumentSnapshot> task) {
+                if (task.isSuccessful()) {
+                    DocumentSnapshot document = task.getResult();
+                    if (document.exists()) {
+                        Calendar c = Calendar.getInstance();
+                        int thisDay = c.get((Calendar.DAY_OF_YEAR));
+                        int lastDay;
 
+                        //get lastdayfield from firestore document
+                        lastDay = Integer.parseInt(document.getString("lastStreakDay"));
+                        int counterOfConsecutiveDays = Integer.parseInt(document.getString("consecutiveStreakDays"));
+                        //if last day played was yesterday
+                        if (lastDay == thisDay - 1){
+                            counterOfConsecutiveDays = counterOfConsecutiveDays + 1;
+                            lastDay = thisDay;
+                            writeIntoDatabaseStreak(counterOfConsecutiveDays,lastDay);
+                        }
+                    } else {
+                        Log.d("bobo", "No such document");
+                    }
+                } else {
+                    Log.d("bobo", "get failed with ", task.getException());
+                }
+            }
+        });
 
-}
\ No newline at end of file
+
+    }
+
+    private void writeIntoDatabaseStreak(int counterOfConsecutiveDays, int lastDay){
+        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
+        String currentUserId = user.getUid();
+        FirebaseFirestore db = FirebaseFirestore.getInstance();
+        final DocumentReference doc = db.collection("User").document(currentUserId);
+
+        doc
+                .update("consecutiveStreakDays", counterOfConsecutiveDays)
+                .addOnSuccessListener(new OnSuccessListener<Void>() {
+                    @Override
+                    public void onSuccess(Void aVoid) {
+                        Log.d("dodo", "DocumentSnapshot successfully updated!");
+                    }
+                })
+                .addOnFailureListener(new OnFailureListener() {
+                    @Override
+                    public void onFailure(@NonNull Exception e) {
+                        Log.w("dodo", "Error updating document", e);
+                    }
+                });
+        doc
+                .update("lastStreakDay", lastDay)
+                .addOnSuccessListener(new OnSuccessListener<Void>() {
+                    @Override
+                    public void onSuccess(Void aVoid) {
+                        Log.d("dodo", "DocumentSnapshot successfully updated!");
+                    }
+                })
+                .addOnFailureListener(new OnFailureListener() {
+                    @Override
+                    public void onFailure(@NonNull Exception e) {
+                        Log.w("dodo", "Error updating document", e);
+                    }
+                });
+
+
+    }
+
+}
+
+// database, there is consecutive days field, and there is last played date field
+// first initialzie last played date to 0
+// get current day
+// do checking - for consecutive days as well
+// update db with new last played date, and consecutive days
+
+
+//ideally i'd like to add 2 fields - lastDay (last played date) & consecutivedays (streak days)
+// these 2 ^ initialize inside register fragment
+// when user completes a game, do updatestreak (which will do checking inside the function)
+// check streak method is just to retrieve lastDay from db & count consecutive days
+// update streak method shld be just to overwrite db
+// update streak method shld only be called when user finishes game
+
+//need to initialize in db int counterOfConsecutiveDays++;
+//if last day is yesterday, then add one into the counter        if (lastDay == thisDay-1){
+////                //CONSECUTIVE DAYS
+////                counterOfConsecutiveDays = counterOfConsecutiveDays +1;
+////                writeIntoDatabaseStreak(counterofConsecutiveDays);
+////                }
+////                //if not, then reset counter
+////                else {
+////                counterOfConsecutiveDays = 0;
+////                writeIntoDatabaseStreak(counterOfConsecutiveDays);
+////                }
+////                //whut am i doing
+////                //whut is this??
+////                transaction.update(doc, "lastStreakDay", thisDay);
+//
\ No newline at end of file
